// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using uiforadmins.Data;

#nullable disable

namespace uiforadmins.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("uiforadmins.Model.Build", b =>
                {
                    b.Property<int>("BuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Playrate")
                        .HasColumnType("int");

                    b.Property<int>("Winrate")
                        .HasColumnType("int");

                    b.HasKey("BuildId");

                    b.ToTable("Build");

                    b.HasData(
                        new
                        {
                            BuildId = 1,
                            Description = "AP roaming",
                            Playrate = 35,
                            Winrate = 55
                        },
                        new
                        {
                            BuildId = 2,
                            Description = "Off-tank CDR",
                            Playrate = 15,
                            Winrate = 53
                        });
                });

            modelBuilder.Entity("uiforadmins.Model.BuildItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("BuildId")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "BuildId");

                    b.HasIndex("BuildId");

                    b.ToTable("BuildItem");
                });

            modelBuilder.Entity("uiforadmins.Model.Champion", b =>
                {
                    b.Property<int>("ChampionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChampionId"), 1L, 1);

                    b.Property<int>("BuildId")
                        .HasColumnType("int");

                    b.Property<int>("ChampionGames")
                        .HasColumnType("int");

                    b.Property<string>("ChampionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChampionWinrate")
                        .HasColumnType("int");

                    b.HasKey("ChampionId");

                    b.HasIndex("BuildId");

                    b.ToTable("Champions");

                    b.HasData(
                        new
                        {
                            ChampionId = 1,
                            BuildId = 2,
                            ChampionGames = 40,
                            ChampionName = "Aurelion Sol",
                            ChampionWinrate = 55
                        },
                        new
                        {
                            ChampionId = 2,
                            BuildId = 1,
                            ChampionGames = 22,
                            ChampionName = "Skarner",
                            ChampionWinrate = 51
                        });
                });

            modelBuilder.Entity("uiforadmins.Model.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"), 1L, 1);

                    b.Property<int>("ItemCost")
                        .HasColumnType("int");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemRarity")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            ItemCost = 3400,
                            ItemDescription = "Anti-Tank AD Mythic item",
                            ItemName = "Kraken Slayer",
                            ItemRarity = 0
                        },
                        new
                        {
                            ItemId = 2,
                            ItemCost = 3400,
                            ItemDescription = "Execute AD Mythic item",
                            ItemName = "Galeforce",
                            ItemRarity = 0
                        },
                        new
                        {
                            ItemId = 3,
                            ItemCost = 3400,
                            ItemDescription = "Survivability AD Mythic item",
                            ItemName = "Shieldbow",
                            ItemRarity = 0
                        });
                });

            modelBuilder.Entity("uiforadmins.Model.Otp", b =>
                {
                    b.Property<int>("OtpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OtpId"), 1L, 1);

                    b.Property<int>("ChampionId")
                        .HasColumnType("int");

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("int");

                    b.Property<string>("OtpName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OtpRank")
                        .HasColumnType("int");

                    b.Property<int>("Winrate")
                        .HasColumnType("int");

                    b.HasKey("OtpId");

                    b.HasIndex("ChampionId");

                    b.ToTable("Otps");

                    b.HasData(
                        new
                        {
                            OtpId = 1,
                            ChampionId = 2,
                            GamesPlayed = 800,
                            OtpName = "Flamekite",
                            OtpRank = 3,
                            Winrate = 90
                        });
                });

            modelBuilder.Entity("uiforadmins.Model.BuildItem", b =>
                {
                    b.HasOne("uiforadmins.Model.Build", "Build")
                        .WithMany("BuildItems")
                        .HasForeignKey("BuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("uiforadmins.Model.Item", "Item")
                        .WithMany("BuildItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Build");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("uiforadmins.Model.Champion", b =>
                {
                    b.HasOne("uiforadmins.Model.Build", null)
                        .WithMany("Champions")
                        .HasForeignKey("BuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("uiforadmins.Model.Otp", b =>
                {
                    b.HasOne("uiforadmins.Model.Champion", null)
                        .WithMany("ChampionOtps")
                        .HasForeignKey("ChampionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("uiforadmins.Model.Build", b =>
                {
                    b.Navigation("BuildItems");

                    b.Navigation("Champions");
                });

            modelBuilder.Entity("uiforadmins.Model.Champion", b =>
                {
                    b.Navigation("ChampionOtps");
                });

            modelBuilder.Entity("uiforadmins.Model.Item", b =>
                {
                    b.Navigation("BuildItems");
                });
#pragma warning restore 612, 618
        }
    }
}
